// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package myfirstmodule.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import java.io.*;
import java.util.*;
import java.lang.*;

public class NumbertoDate extends CustomJavaAction<java.lang.String>
{
	private java.lang.Long Parameter;

	public NumbertoDate(IContext context, java.lang.Long Parameter)
	{
		super(context);
		this.Parameter = Parameter;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		String NumberToWordsConverter = null;
		class NumberToWordsConverter {
			String output = "";
			public final String[] units = { "", "One", "Two", "Three", "Four",
			"Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve",
			"Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen",
			"Eighteen", "Nineteen" };

			public final String[] tens = { 
					"", 		// 0
					"",		// 1
					"Twenty", 	// 2
					"Thirty", 	// 3
					"Forty", 	// 4
					"Fifty", 	// 5
					"Sixty", 	// 6
					"Seventy",	// 7
					"Eighty", 	// 8
					"Ninety" 	// 9
			};

			public String convert(final int n) {
				
				if (n < 0) {
					output = "Minus " + convert(-n);
				}

				if (n < 20) {
					output = units[n];
				}

				if (n < 100) {
					output = tens[n / 10] + ((n % 10 != 0) ? " " : "") + units[n % 10];
				}

				if (n < 1000) {
					output = units[n / 100] + " Hundred" + ((n % 100 != 0) ? " " : "") + convert(n % 100);
				}

				if (n < 100000) {
					output = convert(n / 1000) + " Thousand" + ((n % 10000 != 0) ? " " : "") + convert(n % 1000);
				}

				if (n < 10000000) {
					output = convert(n / 100000) + " Lakh" + ((n % 100000 != 0) ? " " : "") + convert(n % 100000);
				}

				output = convert(n / 10000000) + " Crore" + ((n % 10000000 != 0) ? " " : "") + convert(n % 10000000);
				return output;
			}
			
			
		}
	return NumberToWordsConverter;
	
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "NumbertoDate";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
